---
# Example playbook: Basic SQLite Database Setup
# This playbook demonstrates how to use the samccann.sqlite collection
# to set up a simple application database

- name: Basic SQLite Database Setup
  hosts: localhost
  gather_facts: true
  vars:
    app_db_path: /tmp/myapp.db
    backup_dir: /tmp/backups

  tasks:
    - name: Ensure backup directory exists
      ansible.builtin.file:
        path: "{{ backup_dir }}"
        state: directory
        mode: "0755"

    - name: Create SQLite database
      samccann.sqlite.sqlite_db:
        path: "{{ app_db_path }}"
        state: present
        mode: "0640"
      register: db_created

    - name: Create users table
      samccann.sqlite.sqlite_table:
        db: "{{ app_db_path }}"
        name: users
        state: present
        columns:
          - name: id
            type: INTEGER
            constraints: PRIMARY KEY AUTOINCREMENT
          - name: username
            type: TEXT
            constraints: NOT NULL UNIQUE
          - name: email
            type: TEXT
            constraints: NOT NULL
          - name: created_at
            type: TIMESTAMP
            constraints: DEFAULT CURRENT_TIMESTAMP
      when: db_created is succeeded

    - name: Create posts table
      samccann.sqlite.sqlite_table:
        db: "{{ app_db_path }}"
        name: posts
        state: present
        columns:
          - name: id
            type: INTEGER
            constraints: PRIMARY KEY AUTOINCREMENT
          - name: user_id
            type: INTEGER
            constraints: NOT NULL
          - name: title
            type: TEXT
            constraints: NOT NULL
          - name: content
            type: TEXT
          - name: created_at
            type: TIMESTAMP
            constraints: DEFAULT CURRENT_TIMESTAMP

    - name: Insert sample users
      samccann.sqlite.sqlite_query:
        db: "{{ app_db_path }}"
        query: "INSERT OR IGNORE INTO users (username, email) VALUES (?, ?)"
        parameters:
          - "{{ item.username }}"
          - "{{ item.email }}"
      loop:
        - username: alice
          email: alice@example.com
        - username: tambara
          email: tambara@example.com
        - username: charlie
          email: charlie@example.com

    - name: Insert sample posts
      samccann.sqlite.sqlite_query:
        db: "{{ app_db_path }}"
        query: |
          INSERT OR IGNORE INTO posts (user_id, title, content)
          SELECT users.id, ?, ? FROM users WHERE users.username = ?
        parameters:
          - "{{ item.title }}"
          - "{{ item.content }}"
          - "{{ item.author }}"
      loop:
        - title: "Welcome to our blog"
          content: "This is the first post on our new blog!"
          author: alice
        - title: "SQLite is great"
          content: "Here's why SQLite is perfect for small applications..."
          author: tambara

    - name: Query all users with post counts
      samccann.sqlite.sqlite_query:
        db: "{{ app_db_path }}"
        query: |
          SELECT
            u.username,
            u.email,
            COUNT(p.id) as post_count
          FROM users u
          LEFT JOIN posts p ON u.id = p.user_id
          GROUP BY u.id, u.username, u.email
          ORDER BY u.username
        fetch: all
      register: user_stats

    - name: Display user statistics
      ansible.builtin.debug:
        msg: "User: {{ item[0] }}, Email: {{ item[1] }}, Posts: {{ item[2] }}"
      loop: "{{ user_stats.rows }}"

    - name: Create database backup
      samccann.sqlite.sqlite_backup:
        src: "{{ app_db_path }}"
        dest: "{{ backup_dir }}/myapp_backup_{{ ansible_date_time.epoch }}.db"
        operation: backup
        verify_backup: true
      register: backup_result

    - name: Display backup information
      ansible.builtin.debug:
        msg:
          - "Backup created: {{ backup_result.dest }}"
          - "Backup size: {{ backup_result.dest_size }} bytes"
          - "Backup verified: {{ backup_result.verified }}"
